/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&lt {
    quick-tap-ms = <100>;
    retro-tap;
    hold-trigger-on-release;
};

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 40 41 39>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            display-name = "alpha";
            bindings = <
&kp GRAVE   &kp Q        &kp W            &kp E         &kp R              &kp T              &kp Y        &kp U          &kp I         &kp O             &kp P           &kp MINUS
&caps_word  &hml LGUI A  &hml LEFT_ALT S  &hml LCTRL D  &hml LEFT_SHIFT F  &kp G              &kp H        &hmr RSHIFT J  &hmr RCTRL K  &hmr RIGHT_ALT L  &hmr RGUI SEMI  &kp SQT
&kp LSHFT   &kp Z        &kp X            &kp C         &kp V              &kp B              &kp N        &kp M          &kp COMMA     &kp DOT           &kp FSLH        &lt 9 TAB
                                          &lt 8 DEL     &lt 6 ESCAPE       &lt 4 BACKSPACE    &lt 3 SPACE  &lt 5 RETURN   &lt 7 TAB
            >;
        };

        colemak_dh {
            display-name = "beta";
            bindings = <
&kp GRAVE   &kp Q        &kp W            &kp F         &kp P              &kp B              &kp J        &kp L          &kp U         &kp Y             &kp SQT      &kp MINUS
&caps_word  &hml LGUI A  &hml LEFT_ALT R  &hml LCTRL S  &hml LEFT_SHIFT T  &kp G              &kp M        &hmr RSHIFT N  &hmr RCTRL E  &hmr RIGHT_ALT I  &hmr RGUI O  &kp SEMICOLON
&kp LSHFT   &kp Z        &kp X            &kp C         &kp D              &kp V              &kp K        &kp H          &kp COMMA     &kp DOT           &kp FSLH     &lt 9 TAB
                                          &lt 8 DEL     &lt 6 ESCAPE       &lt 4 BACKSPACE    &lt 3 SPACE  &lt 5 RETURN   &lt 7 TAB
            >;
        };

        engram {
            display-name = "alpha";
            bindings = <
&kp GRAVE   &kp B        &kp Y            &kp O         &kp U              &kp SQT            &kp SEMICOLON  &kp L          &kp D         &kp W             &kp V        &kp Z
&caps_word  &hml LGUI C  &hml LEFT_ALT I  &hml LCTRL E  &hml LEFT_SHIFT A  &kp COMMA          &kp PERIOD     &hmr RSHIFT H  &hmr RCTRL T  &hmr RIGHT_ALT S  &hmr RGUI N  &kp Q
&kp LSHFT   &kp G        &kp X            &kp J         &kp K              &kp MINUS          &kp SLASH      &kp R          &kp M         &kp F             &kp P        &lt 9 TAB
                                          &lt 8 DEL     &lt 6 ESCAPE       &lt 4 BACKSPACE    &lt 3 SPACE    &lt 5 RETURN   &lt 7 TAB
            >;
        };

        symbol_layer {
            bindings = <
&kp EXCL   &kp LEFT_BRACE  &kp SQT    &kp DQT      &kp RIGHT_BRACE  &kp QUESTION     &kp RETURN  &kp LS(TAB)  &kp TAB   &kp SPACE  &kp BACKSPACE  &trans
&kp HASH   &kp CARET       &kp EQUAL  &kp UNDER    &kp DOLLAR       &kp ASTRK        &kp PERIOD  &kp GRAVE    &kp AMPS  &kp PLUS   &kp AT         &trans
&kp TILDE  &kp LT          &kp PIPE   &kp MINUS    &kp GT           &kp FSLH         &kp COMMA   &kp LPAR     &kp LBKT  &kp RBKT   &kp RPAR       &kp BSLH
                                      &kp PERCENT  &kp COLON        &kp SEMICOLON    &trans      &trans       &trans
            >;

            label = "sym";
        };

        number_layer {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &kp PRCNT  &kp N7  &kp N8  &kp N9  &kp EQUAL  &kp COMMA
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &kp PLUS   &kp N4  &kp N5  &kp N6  &kp MINUS  &kp DOT
&trans  &trans    &trans    &trans     &trans     &trans    &kp ASTRK  &kp N1  &kp N2  &kp N3  &kp FSLH   &kp CARET
                            &trans     &trans     &trans    &kp N0     &trans  &trans
            >;

            label = "num";
        };

        system_layer {
            display-name = "sys";
            bindings = <
&kp TAB     &to 0              &to 1         &to 2         &kp N4           &kp N5               &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0       &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4         &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &ext_power EP_TOG  &out OUT_TOG  &kp C_MUTE    &kp C_VOLUME_UP  &kp C_VOLUME_DOWN    &trans    &trans    &trans    &trans     &trans  &trans
                                             &kp DEL       &kp ESC          &kp BACKSPACE        &kp RET   &trans    &kp RALT
            >;
        };

        navigation_layer {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &kp K_UNDO  &kp K_PASTE  &kp K_COPY  &kp K_CUT  &kp K_REDO  &kp K_MUTE
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &kp K_LOCK  &kp LEFT     &kp DOWN    &kp UP     &kp RIGHT   &kp C_VOLUME_UP
&trans  &trans    &trans    &trans     &trans     &trans    &trans      &kp HOME     &kp PG_UP   &kp PG_DN  &kp END     &kp C_VOLUME_DOWN
                            &trans     &trans     &trans    &trans      &trans       &trans
            >;

            label = "nav";
        };

        function_layer {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "func";
        };

        gaming_layer {
            bindings = <
&kp T   &kp TAB    &kp Q  &kp W    &kp E    &kp R        &trans  &trans  &trans  &trans  &trans  &trans
&kp G   &kp LSHFT  &kp A  &kp S    &kp D    &kp F        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LCTRL  &kp Z  &kp X    &kp C    &kp V        &trans  &trans  &trans  &trans  &trans  &trans
                          &kp RET  &kp ESC  &kp SPACE    &trans  &trans  &trans
            >;

            label = "game";
        };

        lower {
            bindings = <
&trans  &to 0   &to 1   &to 2   &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &tog 8  &tog 6  &tog 4    &tog 3  &tog 5  &tog 7
            >;

            label = "lower";
        };
    };
};
